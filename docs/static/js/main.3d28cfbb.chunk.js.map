{"version":3,"sources":["helper/uploadImage.js","components/ProgressBarApp.js","components/FileInputApp.js","components/App.js","index.js"],"names":["uploadImage","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","ProgressBarApp","useState","percent","setPercent","useEffect","setTimeout","Meter","alignSelf","type","value","max","color","size","FileInputApp","img","setImg","show","setShow","handleSubmit","e","preventDefault","target","files","fileDone","FormField","FileInput","name","onChange","Box","pad","Image","fit","style","paddingTop","src","App","Grommet","theme","grommet","fill","align","justify","ReactDOM","render","document","getElementById"],"mappings":"iNAEaA,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DAEP,oDACXC,EAAW,IAAIC,UACZC,OAAO,gBAAgB,cAChCF,EAASE,OAAO,OAAOJ,GALC,kBAWJK,MATH,mDASmB,CAC/BC,OAAO,OACPC,KAAKL,IAbc,YAWjBM,EAXiB,QAgBfC,GAhBe,kCAiBKD,EAAKE,OAjBV,eAiBbC,EAjBa,yBAkBZA,EAAUC,YAlBE,+HAAH,sD,eCEXC,EAAiB,WAE1B,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACNC,YAAW,WACPF,EAAYD,EAAU,MACvB,OACJ,CAACA,IAKA,cAACI,EAAA,EAAD,CACAC,UAAU,SACVC,KAAK,MACLC,MAAOP,EACPQ,IAAI,MACJC,MAAM,OACNC,KAAK,YChBAC,EAAe,WAG1B,MAAsBZ,mBAAS,8FAA/B,mBAAOa,EAAP,KAAYC,EAAZ,KACA,EAAwBd,oBAAS,GAAjC,mBAAOe,EAAP,KAAaC,EAAb,KAGMC,EAAY,uCAAG,WAAOC,GAAP,iBAAA/B,EAAA,6DACnB+B,EAAEC,iBACIjC,EAAOgC,EAAEE,OAAOC,MAAM,GAFT,SAGIpC,EAAYC,GAHhB,OAGboC,EAHa,OAInBN,GAAQ,GACRZ,YAAW,WACTU,EAAOQ,GACPN,GAAQ,KACP,MARgB,2CAAH,sDAYlB,OACE,eAACO,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,KAAK,YACLC,SAAUT,IAEd,eAACU,EAAA,EAAD,CAAKC,IAAI,QAAT,WACEb,GAAQ,cAAC,EAAD,IACV,cAACc,EAAA,EAAD,CACEC,IAAI,QACJC,MAAO,CAACC,WAAY,QACpBC,IAAKpB,WCjCEqB,EAAM,WAIjB,OACE,cAACC,EAAA,EAAD,CAASC,MAAOC,IAAhB,SACE,cAACV,EAAA,EAAD,CAAKW,MAAI,EAACC,MAAM,SAASC,QAAQ,QAAQZ,IAAI,QAA7C,SACE,cAAC,EAAD,SCJRa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3d28cfbb.chunk.js","sourcesContent":["// Upload image to Cloudinary server\r\n\r\nexport const uploadImage = async (file) => {\r\n    \r\n   const cloudUrl = 'https://api.cloudinary.com/v1_1/dr9shic8v/upload';\r\n   const formData = new FormData();\r\n   formData.append('upload_preset','react_test');\r\n   formData.append('file',file);\r\n   \r\n\r\n   \r\n   try {\r\n        \r\n    const resp = await fetch(cloudUrl, {\r\n        method:'POST',\r\n        body:formData,\r\n    });\r\n\r\n    if(resp.ok){\r\n        const cloudResp = await resp.json(); \r\n        return cloudResp.secure_url;\r\n    }\r\n\r\n   } catch (err) {\r\n       throw err;\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {Meter} from 'grommet'\r\n\r\n\r\nexport const ProgressBarApp = () => {\r\n\r\n    const [percent, setPercent] = useState(0);  \r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setPercent( percent + 10);\r\n        }, 100);\r\n    }, [percent]);\r\n\r\n\r\n\r\n    return (\r\n        <Meter \r\n        alignSelf=\"center\"\r\n        type=\"bar\" \r\n        value={percent} \r\n        max='100' \r\n        color=\"blue\" \r\n        size=\"xlarge\"\r\n      /> \r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { FileInput, FormField , Image, Box } from \"grommet\";\r\nimport { uploadImage } from \"../helper/uploadImage\";\r\nimport { ProgressBarApp } from \"./ProgressBarApp\";\r\n\r\n\r\n\r\nexport const FileInputApp = () => {\r\n\r\n  \r\n  const [img, setImg] = useState('https://www.taekwondoitf.es/invictusmalaga/wp-content/uploads/sites/4/2017/12/no-image.png');\r\n  const [show, setShow] = useState(true);\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const file = e.target.files[0];\r\n    const fileDone = await uploadImage(file);\r\n    setShow(false);\r\n    setTimeout(() => {\r\n      setImg(fileDone);\r\n      setShow(true);       // reset show state\r\n    }, 1500);\r\n  };\r\n\r\n\r\n  return (\r\n    <FormField>\r\n      <FileInput\r\n        name=\"imageFile\"\r\n        onChange={handleSubmit}\r\n      />\r\n    <Box pad=\"small\">\r\n    {!show && <ProgressBarApp/>}\r\n    <Image\r\n      fit=\"cover\"\r\n      style={{paddingTop: \"30px\",}}\r\n      src={img}\r\n    />  \r\n      </Box>\r\n    </FormField>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Grommet,grommet, Box } from \"grommet\";\r\nimport { FileInputApp } from \"./FileInputApp\";\r\n\r\nexport const App = () => {\r\n\r\n\r\n\r\n  return (\r\n    <Grommet theme={grommet}>\r\n      <Box fill align=\"center\" justify=\"start\" pad=\"large\">\r\n        <FileInputApp/>\r\n      </Box>\r\n    </Grommet>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\n\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}